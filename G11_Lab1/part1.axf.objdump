
//campus.mcgill.ca/emf/SWE/bkella/My Documents/ECSE 324/G11_Lab1/part1.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
			.text
			.global _start
// LDR -> 

_start:
			LDR R4, =RESULT  // R4 points to result location
   0:	e59f4054 	ldr	r4, [pc, #84]	; 5c <NUMBERS+0x1c>
			LDR R2, [R4, #4] // R2 holds the number of elements in the list
   4:	e5942004 	ldr	r2, [r4, #4]
			ADD R3, R4, #8   // R3 points to the first number
   8:	e2843008 	add	r3, r4, #8
			LDR R0, [R3]	 // R0 holds the first number in the list
   c:	e5930000 	ldr	r0, [r3]

00000010 <LOOP>:
			

LOOP:		SUBS R2, R2, #1  // decrement the loop counter
  10:	e2522001 	subs	r2, r2, #1
			BEQ DONE		 // end loop if counter has reached 0
  14:	0a000005 	beq	30 <DONE>
			ADD R3, R3, #4   // R3 points to next num in list
  18:	e2833004 	add	r3, r3, #4
			LDR R1, [R3]	 // R1 holds the next num in the list
  1c:	e5931000 	ldr	r1, [r3]
			CMP R0, R1		 // Check if it is greater than the maximum
  20:	e1500001 	cmp	r0, r1
			BGE LOOP		 // if no, branch back to the loop
  24:	aafffff9 	bge	10 <LOOP>
			MOV R0, R1		 // if yes, update the current max
  28:	e1a00001 	mov	r0, r1
			B LOOP			 // branch back to the loop
  2c:	eafffff7 	b	10 <LOOP>

00000030 <DONE>:

DONE:		STR R0, [R4]     // store the result to the memory location
  30:	e5840000 	str	r0, [r4]

00000034 <END>:

END:		B END			 // infinite loop!
  34:	eafffffe 	b	34 <END>

00000038 <RESULT>:
  38:	00000000 	.word	0x00000000

0000003c <N>:
  3c:	00000007 	.word	0x00000007

00000040 <NUMBERS>:
  40:	00000004 	.word	0x00000004
  44:	00000005 	.word	0x00000005
  48:	00000003 	.word	0x00000003
  4c:	00000006 	.word	0x00000006
  50:	00000001 	.word	0x00000001
  54:	00000008 	.word	0x00000008
  58:	00000002 	.word	0x00000002
  5c:	00000038 	.word	0x00000038
